---
import { SITE_TITLE, SITE_DESCRIPTION } from "../../consts";
import { getCollection } from "astro:content";
import { ghostClient } from "../../lib/ghost";
import FormattedDate from "../../components/FormattedDate.astro";
import BaseLayout from "../../layouts/BaseLayout.astro";
import Notice from "../../components/Notice.astro";
import Link from "../../components/Link.astro";

export const prerender = false;

const posts = await ghostClient.posts
  .browse({
    limit: "all",
    filter: "tags:-archived",
  })
  .catch((err: unknown) => console.error(err));

Astro.response.headers.set(
  "Cache-Control",
  "public, max-age=3600, stale-while-revalidate=1800"
);
---

<BaseLayout>
  <style>
    table {
      @apply min-w-full divide-y-2 divide-neutral-200 table-auto text-left;
    }

    table th {
      @apply px-4 py-2 font-bold;
    }

    table tbody {
      @apply divide-y divide-neutral-200;
    }

    table tr td {
      @apply px-4 py-2;
    }
  </style>

  <h1 class="text-5xl font-serif">My Blog</h1>

  <Notice kind="info">
    <p>
      This page only contains my recent blog posts. For a complete list of all
      posts, visit the <Link href="/blog/archive/">archive</Link>.
    </p>
  </Notice>

  <section>
    <div class="grid grid-cols-2 gap-4">
      {
        posts.map((post) => {
          const { title, slug, excerpt, published_at } = post;
          return (
            <article>
              <h2 class="text-2xl font-serif">
                <Link href={`/blog/${slug}/`}>{title}</Link>
              </h2>
              <p class="text-neutral-500">
                <FormattedDate date={new Date(published_at)} />
              </p>
              <p>{excerpt}</p>
            </article>
          );
        })
      }
    </div>
  </section>
</BaseLayout>
